geom_node_text(aes(label = ipsrc), size=2, color="gray50", repel=T)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = ipsrc), size=2, color="gray50", repel=T)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50", repel=T)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50")
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50")
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=-1)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust1)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=1)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2.5)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.5) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2.5)+
theme_void()
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2.5)+
theme_void()
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2.5)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2.5,rotate=45)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2.5,angle=45)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2.5,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",hjust=5,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",hjust=2,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",hjust=-2,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",hjust=-0.5,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",hjust=-0.25,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=0.5,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2,angle=-90)
runApp('code')
ip_rel <- data %>% group_by(ipsrc,ipdst) %>% count %>% arrange(desc(n))
ip_graph <- ip_rel %>%
top_n(input$top_ip,n) %>%
graph_from_data_frame()
ip_graph <- ip_rel %>%
top_n(5,n) %>%
graph_from_data_frame()
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2,angle=-90)
ip_graph <- ip_rel %>%
top_n(5,n) %>%
graph_from_data_frame()
ip_graph
ip_rel %>%
top_n(5,n)
ip_rel %>%
top_n(5)
ip_rel
ip_rel %>%
top_n(5)
ip_rel %>% top_n(5,n)
runApp('code')
ip_graph <- ip_rel[1:input$top_ip,] %>%
graph_from_data_frame()
ip_rel[1:5,]
ip_graph
ip_graph <- ip_rel[1:5,] %>%
graph_from_data_frame()
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="orange"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2,angle=-90)
runApp('code')
runApp('code')
runApp('code')
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="blue"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color="blue"), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="blue", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=2, color="gray50",vjust=2,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=5, color="gray50",vjust=2,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",vjust=2,angle=-90)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",vjust=2,angle=-90)+
xlim(-5, 20)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",vjust=2,angle=-90)+
ylim(-5, 20)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",vjust=2,angle=-90)+
ylim(-5, 5)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",vjust=2,angle=-90)+
ylim(-2, 5)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",vjust=2,angle=-90)+
ylim(-1, 5)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",vjust=2,angle=-90)+
ylim(-0.5, 5)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",vjust=2,angle=-90)+
ylim(-0.5, 1)
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",vjust=2,angle=-90)+
ylim(-0.5, 2)
runApp('code')
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=2,angle=-90)+
expand_limits(y=c(-2, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=2,angle=-90)+
expand_limits(y=c(-2, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=-2,angle=-90)+
expand_limits(y=c(-2, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=-0.5,angle=-90)+
expand_limits(y=c(-2, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=-0.5,angle=-90)+
expand_limits(y=c(-1, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=-0.5,angle=-90)+
expand_limits(y=c(-.9, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=-0.5,angle=-90)+
expand_limits(y=c(-.75, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=-0.4,angle=-90)+
expand_limits(y=c(-.75, NA))
runApp('code')
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=-0.4,angle=-90)+
expand_limits(y=c(-1, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",position="left",hjust=-0.4,angle=-90)+
expand_limits(y=c(-1, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",position="top",hjust=-0.4,angle=-90)+
expand_limits(y=c(-1, NA))
runApp('code')
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n,color=n), alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=-0.4,angle=-90)+
expand_limits(y=c(-1, NA))
ggraph(ip_graph, layout = 'linear') +
geom_edge_arc(aes(width=n),color="orange", alpha=.7) +
geom_node_point(size=5, color="gray50")+
geom_node_text(aes(label = name), size=4, color="gray50",hjust=-0.4,angle=-90)+
expand_limits(y=c(-1, NA))
runApp('code')
runApp('code')
substr(data$ipsrc,"159.84.146.")
grep(data$ipsrc,"159.84.146.")
grep("159.84.146.",data$ipsrc)
runApp('code')
runApp('code')
data[!grep("159.84.146.",data$ipsrc),]
data[grep("159.84.146.",data$ipsrc),]
data[-grep("159.84.146.",data$ipsrc),]
runApp('code')
shiny::runApp('code_Romain')
####################################################################
################### Installation des dépendances ###################
####################################################################
list.of.packages <-
c(
"shiny",
"shinydashboard",
"shinyWidgets",
"dplyr",
"plotly",
"RColorBrewer",
"ggplot2",
"igraph",
"ggraph",
"sqldf",
"reshape2",
"fastDummies",
"ape",
"httr",
"htmltools"
)
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])]
if (length(new.packages))
install.packages(new.packages)
lapply(list.of.packages, library, character.only = TRUE)
rm(list=ls(all=TRUE))
setwd("C:\\Users\\rpic\\Documents\\code")
#setwd("C:\\Users\\rpic\\Documents\\PHYTEM\\2020-2021\\Cours\\Data Mining et Sécurité Informatique\\Challenge\\code_Romain")
##################################################################
################### Pré traitement des données ###################
##################################################################
#
# # Chargement des données
data <- read.table("data/logs.csv",sep=";",header = TRUE,nrows=50000)
# data$ipsrc <- as.factor(data$ipsrc
ports=(data %>% group_by(dstport) %>% count(sort=T))$dstport
port_list <- ports[1:10]
data$dstport <- as.character(data$dstport)
analyse<-sqldf("select ipsrc, count(*) as nombre,
count(distinct dstport) as cndstport,
sum( case when action like 'Permit' then 1 else 0 ENd) as permit,
sum( case when action like 'Permit' and dstport < 1024 then 1 else 0 ENd) as inf1024permit,
sum( case when action like 'Permit' and dstport >= 1024 then 1 else 0 ENd) as sup1024permit,
sum( case when action like 'Permit' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as adminpermit,
sum(case when action like 'Deny' then 1 else 0 ENd) as deny,
sum(case when action like 'Deny' and dstport < 1024 then 1 else 0 ENd) as inf1024deny,
sum(case when action like 'Deny' and dstport >= 1024 then 1 else 0 ENd) as sup1024deny,
sum( case when action like 'Deny' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as admindeny from data group by ipsrc ")
rownames(analyse)<- analyse$ipsrc
analyse <- analyse[,-1]
data$datetime <-strptime(data$datetime, "%Y-%m-%d %H:%M:%S")
data$datetime_month<-format(data$datetime, format = "%m")
data$datetime_year<-format(data$datetime, format = "%Y")
data$datetime_day<-format(data$datetime, format = "%d")
data$datetime_hour<-data$datetime$hour
data$datetime_min<-data$datetime$min
data$datetime_year<- as.numeric(data$datetime_year)
data$datetime_day<- as.numeric(data$datetime_day)
data$datetime_month<- as.numeric(data$datetime_month)
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
##################################################################
################### Pré traitement des données ###################
##################################################################
#
# # Chargement des données
data <- read.table("data/firewall_secu.log",sep=";",header = TRUE,nrows=50000)
runApp('code_Romain')
data
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
runApp('code_Romain')
analyse<-sqldf("select ipsrc, count(*) as nombre,
count(distinct dstport) as cndstport,
sum( case when action like 'Permit' then 1 else 0 ENd) as permit,
sum( case when action like 'Permit' and dstport < 1024 then 1 else 0 ENd) as inf1024permit,
sum( case when action like 'Permit' and dstport >= 1024 then 1 else 0 ENd) as sup1024permit,
sum( case when action like 'Permit' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as adminpermit,
sum(case when action like 'Deny' then 1 else 0 ENd) as deny,
sum(case when action like 'Deny' and dstport < 1024 then 1 else 0 ENd) as inf1024deny,
sum(case when action like 'Deny' and dstport >= 1024 then 1 else 0 ENd) as sup1024deny,
sum( case when action like 'Deny' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as admindeny from data group by ipsrc ")
data
unique(data$ipsrc)
rm(list=ls(all=TRUE))
setwd("C:\\Users\\rpic\\Documents\\code_Romain")
##################################################################
################### Pré traitement des données ###################
##################################################################
#
# # Chargement des données
data <- read.table("data/firewall_secu.log",sep=";",header = TRUE,nrows=50000)
ports=(data %>% group_by(dstport) %>% count(sort=T))$dstport
port_list <- ports[1:10]
data$dstport <- as.character(data$dstport)
analyse<-sqldf("select ipsrc, count(*) as nombre,
count(distinct dstport) as cndstport,
sum( case when action like 'Permit' then 1 else 0 ENd) as permit,
sum( case when action like 'Permit' and dstport < 1024 then 1 else 0 ENd) as inf1024permit,
sum( case when action like 'Permit' and dstport >= 1024 then 1 else 0 ENd) as sup1024permit,
sum( case when action like 'Permit' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as adminpermit,
sum(case when action like 'Deny' then 1 else 0 ENd) as deny,
sum(case when action like 'Deny' and dstport < 1024 then 1 else 0 ENd) as inf1024deny,
sum(case when action like 'Deny' and dstport >= 1024 then 1 else 0 ENd) as sup1024deny,
sum( case when action like 'Deny' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as admindeny from data group by ipsrc ")
####################################################################
################### Installation des dépendances ###################
####################################################################
list.of.packages <-
c(
"shiny",
"shinydashboard",
"shinyWidgets",
"dplyr",
"plotly",
"RColorBrewer",
"ggplot2",
"igraph",
"ggraph",
"sqldf",
"reshape2",
"fastDummies",
"ape",
"httr",
"htmltools"
)
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])]
if (length(new.packages))
install.packages(new.packages)
lapply(list.of.packages, library, character.only = TRUE)
rm(list=ls(all=TRUE))
setwd("C:\\Users\\rpic\\Documents\\code_Romain")
#setwd("C:\\Users\\rpic\\Documents\\PHYTEM\\2020-2021\\Cours\\Data Mining et Sécurité Informatique\\Challenge\\code_Romain")
##################################################################
################### Pré traitement des données ###################
##################################################################
#
# # Chargement des données
data <- read.table("data/firewall_secu.log",sep=";",header = TRUE,nrows=50000)
# data$ipsrc <- as.factor(data$ipsrc
ports=(data %>% group_by(dstport) %>% count(sort=T))$dstport
port_list <- ports[1:10]
data$dstport <- as.character(data$dstport)
analyse<-sqldf("select ipsrc, count(*) as nombre,
count(distinct dstport) as cndstport,
sum( case when action like 'Permit' then 1 else 0 ENd) as permit,
sum( case when action like 'Permit' and dstport < 1024 then 1 else 0 ENd) as inf1024permit,
sum( case when action like 'Permit' and dstport >= 1024 then 1 else 0 ENd) as sup1024permit,
sum( case when action like 'Permit' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as adminpermit,
sum(case when action like 'Deny' then 1 else 0 ENd) as deny,
sum(case when action like 'Deny' and dstport < 1024 then 1 else 0 ENd) as inf1024deny,
sum(case when action like 'Deny' and dstport >= 1024 then 1 else 0 ENd) as sup1024deny,
sum( case when action like 'Deny' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as admindeny from data group by ipsrc ")
rownames(analyse)<- analyse$ipsrc
analyse <- analyse[,-1]
data$datetime <-strptime(data$datetime, "%Y-%m-%d %H:%M:%S")
data$datetime_month<-format(data$datetime, format = "%m")
data$datetime_year<-format(data$datetime, format = "%Y")
data$datetime_day<-format(data$datetime, format = "%d")
data$datetime_hour<-data$datetime$hour
data$datetime_min<-data$datetime$min
data$datetime_year<- as.numeric(data$datetime_year)
data$datetime_day<- as.numeric(data$datetime_day)
data$datetime_month<- as.numeric(data$datetime_month)
runApp()
analyse
runApp()
runApp()
rm(list=ls(all=TRUE))
setwd("C:\\Users\\rpic\\Documents\\code_Romain")
##################################################################
################### Pré traitement des données ###################
##################################################################
#
# # Chargement des données
data <- read.table("data/firewall_secu.log",sep=";",header = TRUE,nrows=50000)
ports=(data %>% group_by(dstport) %>% count(sort=T))$dstport
port_list <- ports[1:10]
data$dstport <- as.character(data$dstport)
analyse<-sqldf("select ipsrc, count(*) as nombre,
count(distinct dstport) as cndstport,
sum( case when action like 'Permit' then 1 else 0 ENd) as permit,
sum( case when action like 'Permit' and dstport < 1024 then 1 else 0 ENd) as inf1024permit,
sum( case when action like 'Permit' and dstport >= 1024 then 1 else 0 ENd) as sup1024permit,
sum( case when action like 'Permit' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as adminpermit,
sum(case when action like 'Deny' then 1 else 0 ENd) as deny,
sum(case when action like 'Deny' and dstport < 1024 then 1 else 0 ENd) as inf1024deny,
sum(case when action like 'Deny' and dstport >= 1024 then 1 else 0 ENd) as sup1024deny,
sum( case when action like 'Deny' and (dstport = 21 OR dstport = 22 OR dstport = 3389 OR dstport = 3306)
then 1 else 0 ENd) as admindeny from data group by ipsrc ")
rownames(analyse)<- analyse$ipsrc
analyse <- analyse[,-1]
data$datetime <-strptime(data$datetime, "%Y-%m-%d %H:%M:%S")
data$datetime_month<-format(data$datetime, format = "%m")
data$datetime_year<-format(data$datetime, format = "%Y")
data$datetime_day<-format(data$datetime, format = "%d")
data$datetime_hour<-data$datetime$hour
data$datetime_min<-data$datetime$min
data$datetime_year<- as.numeric(data$datetime_year)
data$datetime_day<- as.numeric(data$datetime_day)
data$datetime_month<- as.numeric(data$datetime_month)
data$ipsrc<-as.character(data$ipsrc)
head(data)
head(data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp('C:/code_challenge_secu/code_2_0/code_2_0')
